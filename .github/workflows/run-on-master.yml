name: TeachMe5-runner

on:
  push:
    branches:
      - main

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK (Java 17 in this example, adjust as needed)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Use Eclipse Temurin JDK
          java-version: '17'

      # 3. Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Build the project and install dependencies from pom.xml
      - name: Build and Install with Maven
        run: mvn clean install
        env:
          AUTH_URL: 'http://localhost:8085/api/v1/users/'
          RATING_URL: '/rating'
          COURSES_URL: '/api/v1/courses/'
          STUDENT_URL: 'http://student-service:8080/api/v1/students/me'
          BASE_URL: 'http://localhost:8080'
          MONGODB_USER: 'luciaperezromero07'
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}

      # 5. Build Docker image
      - name: Build Docker image
        run: docker build -t rating-service .

       # 6. Run Docker container
      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name rating-service rating-service
      
      # 7. Run tests with Maven
      - name: Run Tests
        run: mvn test
        env:
          AUTH_URL: 'http://localhost:8085/api/v1/users/'
          RATING_URL: '/rating'
          COURSES_URL: '/api/v1/courses/'
          STUDENT_URL: 'http://student-service:8080/api/v1/students/me'
          BASE_URL: 'http://localhost:8080'
          MONGODB_USER: 'luciaperezromero07'
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
     

